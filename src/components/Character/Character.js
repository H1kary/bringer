import React from 'react';
import './Character.css';

function Character({ 
  onHikeClick, 
  equipment, 
  isHiking, 
  onCancelHike, 
  onUnequipItem,
  gold,
  onShopClick,
  onLocationClick,
  health,
  maxHealth,
  healthRegen
}) {
  const slotNames = {
    helmet: { name: '–®–ª–µ–º', icon: 'ü™ñ' },
    amulet: { name: '–ê–º—É–ª–µ—Ç', icon: 'üìø' },
    chest: { name: '–ù–∞–≥—Ä—É–¥–Ω–∏–∫', icon: 'üëï' },
    ring: { name: '–ö–æ–ª—å—Ü–æ', icon: 'üíç' },
    weapon: { name: '–û—Ä—É–∂–∏–µ', icon: '‚öîÔ∏è' },
    shield: { name: '–©–∏—Ç', icon: 'üõ°Ô∏è' },
    legs: { name: '–®—Ç–∞–Ω—ã', icon: 'üëñ' },
    boots: { name: '–û–±—É–≤—å', icon: 'üë¢' }
  };

  const totalDefense = Object.values(equipment)
    .filter(item => item && item.defense)
    .reduce((sum, item) => sum + item.defense, 0);

  const totalAttack = Object.values(equipment)
    .filter(item => item && item.attack)
    .reduce((sum, item) => sum + item.attack, 0);

  const totalLuck = Object.values(equipment)
    .filter(item => item && item.luck)
    .reduce((sum, item) => sum + item.luck, 0);

  return (
    <div className="character">
      <div className="character-header">
        <div className="character-portrait">
          <div className="character-icon">üßô‚Äç‚ôÇÔ∏è</div>
          <div className="character-stats">
            <div className="health-bar">
              <div 
                className={`health-fill ${health < 30 ? 'health-low' : ''}`} 
                style={{ width: `${(health / maxHealth) * 100}%` }}
              />
              <div className="health-text">
                {health.toFixed(1)}/{maxHealth} HP
              </div>
            </div>
            <div className="stats-row">
              <div className="stat" data-type="attack">‚öîÔ∏è {totalAttack}</div>
              <div className="stat" data-type="defense">üõ°Ô∏è {totalDefense}</div>
              <div className={`stat ${totalLuck >= 0 ? 'positive' : 'negative'}`} data-type="luck">
                ‚òòÔ∏è {totalLuck > 0 ? '+' : ''}{totalLuck}
              </div>
              <div className="stat" data-type="regen">
                ‚ù§Ô∏è‚Äçü©π {healthRegen.toFixed(1)}/—Å–µ–∫
              </div>
            </div>
          </div>
        </div>
        <div className="character-actions">
          <div className="gold">üí∞ {gold}</div>
          <button onClick={onShopClick}>–ú–∞–≥–∞–∑–∏–Ω üè™</button>
          <button onClick={onLocationClick}>–í—ã–±—Ä–∞—Ç—å –ª–æ–∫–∞—Ü–∏—é üó∫Ô∏è</button>
          <button onClick={isHiking ? onCancelHike : onHikeClick}>
            {isHiking ? '–û—Ç–º–µ–Ω–∏—Ç—å –ø–æ—Ö–æ–¥ ‚öîÔ∏è' : '–í –ø–æ—Ö–æ–¥! ‚öîÔ∏è'}
          </button>
        </div>
      </div>

      <div className="equipment-grid">
        {Object.entries(slotNames).map(([slot, item]) => (
          <div key={slot} className="equipment-slot">
            <div className="slot-label">{item.name}</div>
            {equipment[slot] ? (
              <div className="equipped-item" onClick={() => onUnequipItem(slot, equipment[slot])}>
                <span className="item-icon">{equipment[slot].icon}</span>
                <span className="item-name">{equipment[slot].name}</span>
              </div>
            ) : (
              <div className="empty-slot">
                <span className="empty-icon">{item.icon}</span>
                <span>–ü—É—Å—Ç–æ</span>
              </div>
            )}
          </div>
        ))}
      </div>
    </div>
  );
}

export default Character;
